import getObject from '@/utils/api/getObject';
import { GetServerSidePropsContext } from 'next';
import { NextSeo } from 'next-seo';
import Image from 'next/image';
import { ArticleGrid } from '@/components/grid';
import Layout from '../components/layout';
import { isMultiLanguage } from '../lib/isMultiLanguage';
import { getCurrentLocaleStore, globalDrupalStateStores } from '../lib/stores';
import { Article } from '@/types/Article';

type Props = {
	articles: Article[];
	footerMenu: Record<string, unknown>[];
	hrefLang: { hrefLang: string; href: string }[] | false;
	multiLanguage: boolean;
};

const HomepageHeader = () => (
	<div className={`mx-auto font-extrabold text-center w-fit text-5xl m-5`}>
		<h1>
			Welcome to{' '}
			<a className="text-blue-500" href="https://nextjs.org">
				Next.js!
			</a>
		</h1>
		<div className="items-center bg-black rounded text-white flex flex-row font-normal mt-8 py-4 px-7 w-fit">
			<span>Decoupled Drupal on </span>
			<Image
				src="/pantheon.png"
				alt="Pantheon Logo"
				style={{
					margin: 0,
				}}
				width={191}
				height={60}
			/>
		</div>
	</div>
);

export const HomepageTemplate = ({
	articles,
	footerMenu,
	hrefLang,
	multiLanguage,
}: Props) => {
	return (
		<Layout footerMenu={footerMenu}>
			<NextSeo
				title="Decoupled Next Drupal Demo"
				description="Generated by create-pantheon-decoupled-kit."
			/>
			<HomepageHeader />
			<section>
				<ArticleGrid data={articles} multiLanguage={multiLanguage} />
			</section>
		</Layout>
	);
};

export const getServerSideProps = async (
	context: GetServerSidePropsContext,
) => {
	const origin = process.env.NEXT_PUBLIC_FRONTEND_URL;
	const { locales, locale, res } = context;
	// if there is more than one language in context.locales,
	// assume multilanguage is enabled.
	const multiLanguage = isMultiLanguage(locales);
	const hrefLang = locales?.map((locale) => {
		return {
			hrefLang: locale,
			href: origin + '/' + locale,
		};
	});

	try {
		const store = getCurrentLocaleStore(locale ?? '', globalDrupalStateStores);
		const articles = await getObject<Article>('article');

		// const articles = await store.getObject({
		// 	objectName: 'node--article',
		// 	refresh: true,
		// 	res,
		// 	anon: true,
		// });

		if (!articles) {
			throw new Error(
				'No articles returned. Make sure the objectName and params are valid!',
			);
		}

		// const sortedArticles = sortDate({
		// 	data: articles2,
		// 	key: 'changed',
		// 	direction: 'desc',
		// });

		const footerMenu = await store.getObject({
			objectName: 'menu_items--main',
			refresh: true,
			res,
			anon: true,
		});

		return {
			props: { articles, hrefLang, multiLanguage, footerMenu },
		};
	} catch (error) {
		console.error('Unable to fetch data for articles page: ', error);
		return {
			notFound: true,
		};
	}
};

export default HomepageTemplate;
